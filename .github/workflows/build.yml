name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        # shell: powershell
        # run: |
        #   New-Item -Path .\.sonar\scanner -ItemType Directory
        #   dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

        shell: bash
        run: |
          mkdir -p .sonar/scanner 
          dotnet tool install dotnet-sonarscanner --tool-path .sonar/scanner
        # dotnet tool update dotnet-sonnarscanner --tool-path /sonar/scanner

      - name: Install Test Coverage tool
        run: dotnet tool install --global dotnet-coverage

      - name: Test & Generate Code Coverage report
        run: dotnet-coverage collect "dotnet test" -f xml -o "github/workspace/coverage.xml"
        
      - name: Publish Code Coverage Summary
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: /coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          threshold: '60 80'

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"jorgetbGitHub_Builder4You" `
            /o:"jorgetbgithub" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.vscoveragexml.reportsPaths=github/workspace/coverage.xml
          dotnet build --no-incremental
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"